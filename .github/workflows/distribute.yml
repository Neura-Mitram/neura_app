name: Distribute Neura Build

on:
  workflow_dispatch:
    inputs:
      build_mode:
        description: 'Build type'
        required: true
        default: 'release'
        type: choice
        options:
          - release
          - debug
      build_format:
        description: 'Build format'
        required: true
        default: 'apk'
        type: choice
        options:
          - apk
          - aab

env:
  BUILD_MODE: ${{ github.event.inputs.build_mode }}
  BUILD_FORMAT: ${{ github.event.inputs.build_format }}

jobs:
  build:
    name: Build & Distribute Neura
    runs-on: ubuntu-latest

    steps:
      - name: 🔁 Checkout code
        uses: actions/checkout@v4

      - name: ⚙️ Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.32.8"

      - name: 📦 Install dependencies
        run: flutter pub get

      - name: 🔐 Write google-services.json
        run: echo '${{ secrets.FIREBASE_SERVICES }}' > android/app/google-services.json

      - name: 🏗️ Build APK or AAB
        run: |
          echo "📦 Building $BUILD_FORMAT in $BUILD_MODE mode..."
          if [ "$BUILD_MODE" = "release" ]; then
            if [ "$BUILD_FORMAT" = "apk" ]; then
              flutter build apk --release
            else
              flutter build appbundle --release
            fi
          else
            flutter build apk --debug
          fi

      - name: 🧮 Set artifact path
        run: |
          if [ "$BUILD_FORMAT" = "aab" ]; then
            echo "ARTIFACT_PATH=build/app/outputs/bundle/release/app-release.aab" >> $GITHUB_ENV
          elif [ "$BUILD_MODE" = "release" ]; then
            echo "ARTIFACT_PATH=build/app/outputs/flutter-apk/app-release.apk" >> $GITHUB_ENV
          else
            echo "ARTIFACT_PATH=build/app/outputs/flutter-apk/app-debug.apk" >> $GITHUB_ENV
          fi

      - name: 📦 Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: 🚀 Upload to Firebase (release only)
        if: ${{ env.BUILD_MODE == 'release' }}
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_APP_ID }}
          token: ${{ secrets.FIREBASE_TOKEN }}
          groups: testers
          file: ${{ env.ARTIFACT_PATH }}
          releaseNotes: "📦 Auto build from GitHub Actions (${{ env.BUILD_FORMAT }}, ${{ env.BUILD_MODE }})"
