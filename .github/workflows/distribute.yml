name: Build & Distribute Neura

on:
  workflow_dispatch:
    inputs:
      build_mode:
        description: 'Build type'
        required: true
        default: 'release'
        type: choice
        options: [release, debug]
      build_format:
        description: 'Build format'
        required: true
        default: 'apk'
        type: choice
        options: [apk, aab]

env:
  BUILD_MODE: ${{ github.event.inputs.build_mode }}
  BUILD_FORMAT: ${{ github.event.inputs.build_format }}
  ANDROID_HOME: /usr/local/lib/android/sdk

jobs:
  build:
    name: 🚀 Build & Distribute
    runs-on: ubuntu-latest
    timeout-minutes: 40

    steps:
      - name: 🔁 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # ---------- Cache Setup ----------
      - name: 📦 Cache Gradle & Maven
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.m2
          key: gradle-maven-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-maven-${{ runner.os }}-

      - name: 📦 Cache Kotlin JARs
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches/modules-2/files-2.1/org.jetbrains.kotlin
            ~/.gradle/caches/modules-2/files-2.1/org.jetbrains.kotlinx
          key: kotlin-jars-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            kotlin-jars-${{ runner.os }}-

      - name: 📦 Cache Android SDK
        uses: actions/cache@v4
        with:
          path: ${{ env.ANDROID_HOME }}
          key: android-sdk-${{ runner.os }}-35
          restore-keys: |
            android-sdk-${{ runner.os }}-

      - name: 📦 Cache Flutter deps
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            .dart_tool
          key: flutter-deps-${{ runner.os }}-${{ hashFiles('pubspec.lock') }}
          restore-keys: |
            flutter-deps-${{ runner.os }}-

      # ---------- Setup Tools ----------
      - name: ⚙️ Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.32.8"
          channel: stable
          cache: true

      # ---------- Android SDK Install ----------
      - name: 📦 Install Android SDK (minimal)
        run: |
          set -e
          yes | sdkmanager --licenses
          sdkmanager "platform-tools" "platforms;android-35" "build-tools;35.0.0"

      # ---------- Build Steps ----------
      - name: 📦 Install Flutter dependencies
        run: flutter pub get

      - name: 🔐 Write google-services.json
        run: |
          mkdir -p android/app
          echo '${{ secrets.FIREBASE_SERVICES }}' > android/app/google-services.json

      - name: 🏗️ Build APK/AAB (verbose logs)
        run: |
          echo "📦 Building $BUILD_FORMAT in $BUILD_MODE mode with verbose output..."
          if [ "$BUILD_MODE" = "release" ]; then
            if [ "$BUILD_FORMAT" = "apk" ]; then
              flutter build apk --release --no-shrink --verbose --stacktrace
            else
              flutter build appbundle --release --no-shrink --verbose --stacktrace
            fi
          else
            flutter build apk --debug --verbose --stacktrace
          fi


      - name: 🧮 Find build artifact (supports all Gradle paths)
        run: |
          if [ "$BUILD_FORMAT" = "aab" ]; then
            FILE_PATH=$(find build/ -type f -name "*.aab" | head -n 1)
          else
            FILE_PATH=$(find build/ -type f -name "*.apk" | head -n 1)
          fi
          if [ -z "$FILE_PATH" ]; then
            echo "❌ No build artifact found!"
            echo "📂 Files in build/:"
            find build/ -type f
            exit 1
          fi
          echo "✅ Found build artifact: $FILE_PATH"
          echo "ARTIFACT_PATH=$FILE_PATH" >> $GITHUB_ENV
          echo "ARTIFACT_NAME=Neura-${BUILD_MODE}-${BUILD_FORMAT}-$(date +%Y%m%d-%H%M)" >> $GITHUB_ENV

      # ---------- Upload ----------
      - name: 🚀 Upload to Firebase (release only)
        if: ${{ env.BUILD_MODE == 'release' }}
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_APP_ID }}
          token: ${{ secrets.FIREBASE_TOKEN }}
          groups: testers
          file: ${{ env.ARTIFACT_PATH }}
          releaseNotes: |
            🚀 Neura v1.0.0+1 (${{ env.BUILD_FORMAT }})
            Built: $(date +'%Y-%m-%d %H:%M')

      - name: 💾 Upload APK/AAB to GitHub
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_PATH }}
          retention-days: 7

      - name: 🩺 Flutter Doctor (on failure)
        if: failure()
        run: flutter doctor -v
